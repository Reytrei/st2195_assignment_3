install.packages("rmarkdown")
library(rmarkdown)
library("rmarkdown")
render("Escritorio/hello-Rmd.Rmd")
render("C:\Users\bodeg\Desktop\hello-Rmd.Rmd")
render("C:\Users\bodeg\Desktop\hello-Rmd.Rmd")
render("C:\Users\bodeg\Downloads\hello-rmd.rmd")
render("\Users\bodeg\Downloads\hello-rmd.rmd")
render("C:\\Users\\bodeg\\Downloads\\hello-Rmd.Rmd")
library(knitr)
source("~/.active-rstudio-document")
library(knitr)
install.packages("tm")
?corpus
library("tm")
?Corpus
?VectorSource
?DocumentTermMatrix
getdir()
setwd("D:\Juanma\Juanma\Universidad\Programacion")
setwd("D:\Juanma\Juanma\Universidad\Programacion")
setwd("D:/Juanma/Juanma/Universidad/Programacion")
setwd("~/")
setwd("D:/Juanma/Juanma/Universidad/Programacion")
library(rvest)
library(xml2)
cars_url <- "https://en.wikipedia.org/wiki/Comma-separated_values"
html <- read_html(cars_url)
html_xpath <- "//pre[(((count(preceding-sibling::*) + 1) = 56) and parent::*)]"
##cars_table <- html_nodes(html,".pre")
node <- html_node(x=html,xpath= html_xpath)
library(rvest)
library(xml2)
cars_url <- "https://en.wikipedia.org/wiki/Comma-separated_values"
html <- read_html(cars_url)
html_xpath <- "//pre[(((count(preceding-sibling::*) + 1) = 56) and parent::*)]"
##cars_table <- html_nodes(html,".pre")
node <- html_node(x=html,xpath= html_xpath)
node
library(rvest)
library(xml2)
cars_url <- "https://en.wikipedia.org/wiki/Comma-separated_values"
html <- read_html(cars_url)
html_xpath <- "//pre[(((count(preceding-sibling::*) + 1) = 56) and parent::*)]"
##cars_table <- html_nodes(html,".pre")
node <- html_node(x=html,xpath= html_xpath)
html_children(node)
library(rvest)
library(xml2)
cars_url <- "https://en.wikipedia.org/wiki/Comma-separated_values"
html <- read_html(cars_url)
html_xpath <- "//pre[(((count(preceding-sibling::*) + 1) = 56) and parent::*)]"
##cars_table <- html_nodes(html,".pre")
node <- html_node(x=html,xpath= html_xpath)
html_text(html_xpath)
library(rvest)
library(xml2)
cars_url <- "https://en.wikipedia.org/wiki/Comma-separated_values"
html <- read_html(cars_url)
html_xpath <- "//pre[(((count(preceding-sibling::*) + 1) = 56) and parent::*)]"
##cars_table <- html_nodes(html,".pre")
node <- html_node(x=html,xpath= html_xpath)
html_attr(node)
library(rvest)
library(xml2)
cars_url <- "https://en.wikipedia.org/wiki/Comma-separated_values"
html <- read_html(cars_url)
html_xpath <- "//pre[(((count(preceding-sibling::*) + 1) = 56) and parent::*)]"
##cars_table <- html_nodes(html,".pre")
node <- html_node(x=html,xpath= html_xpath)
html_attrs(node)
library(rvest)
library(xml2)
cars_url <- "https://en.wikipedia.org/wiki/Comma-separated_values"
html <- read_html(cars_url)
html_xpath <- "//pre[(((count(preceding-sibling::*) + 1) = 56) and parent::*)]"
##cars_table <- html_nodes(html,".pre")
node <- html_node(x=html,xpath= html_xpath)
html_text(node)
library(rvest)
library(xml2)
cars_url <- "https://en.wikipedia.org/wiki/Comma-separated_values"
html <- read_html(cars_url)
html_xpath <- "//pre[(((count(preceding-sibling::*) + 1) = 56) and parent::*)]"
##cars_table <- html_nodes(html,".pre")
node <- html_node(x=html,xpath= html_xpath)
dat <- html_text(node)
data.frame(dat)
library(rvest)
library(xml2)
cars_url <- "https://en.wikipedia.org/wiki/Comma-separated_values"
html <- read_html(cars_url)
html_xpath <- "//pre[(((count(preceding-sibling::*) + 1) = 56) and parent::*)]"
##cars_table <- html_nodes(html,".pre")
node <- html_node(x=html,xpath= html_xpath)
dat <- html_text(node)
dataframe <- data.frame(dat)
print(dataframe)
library(rvest)
library(xml2)
cars_url <- "https://en.wikipedia.org/wiki/Comma-separated_values"
html <- read_html(cars_url)
html_xpath <- "//pre[(((count(preceding-sibling::*) + 1) = 56) and parent::*)]"
##cars_table <- html_nodes(html,".pre")
node <- html_node(x=html,xpath= html_xpath)
html_text(node)
library(rvest)
library(xml2)
cars_url <- "https://en.wikipedia.org/wiki/Comma-separated_values"
html <- read_html(cars_url)
html_xpath <- "//pre[(((count(preceding-sibling::*) + 1) = 56) and parent::*)]"
##cars_table <- html_nodes(html,".pre")
node <- html_node(x=html,xpath= html_xpath)
info <- html_text(node)
data <- data.frame(info)
print(data)
data <- data.frame(info)
print(data)
data <- data.frame(info)
print(data)
data <- data.frame(info)
print(data)
data <- data.frame(info)
print(data)
library(rvest)
library(xml2)
cars_url <- "https://en.wikipedia.org/wiki/Comma-separated_values"
html <- read_html(cars_url)
html_xpath <- "//pre[(((count(preceding-sibling::*) + 1) = 56) and parent::*)]"
##cars_table <- html_nodes(html,".pre")
node <- html_node(x=html,xpath= html_xpath)
info <- html_text(node)
data <- data.frame(info)
print(data)
library(rvest)
cars_url <- "https://en.wikipedia.org/wiki/Comma-separated_values"
html <- read_html(cars_url)
cars_table <- html_node(cars_url, "/class=wikitable")
library(rvest)
library(rvest)
cars_url <- "https://en.wikipedia.org/wiki/Comma-separated_values"
html <- read_html(cars_url)
cars_table <- html_node(cars_url, "//table class=wikitable")
library(rvest)
cars_url <- "https://en.wikipedia.org/wiki/Comma-separated_values"
html <- read_html(cars_url)
cars_table <- html_node(cars_url, ".table class=wikitable")
cars_table <- html_node(cars_url, ".class=wikitable")
cars_table <- html_node(cars_url, ".wikitable")
library(rvest)
cars_url <- "https://en.wikipedia.org/wiki/Comma-separated_values"
html <- read_html(cars_url)
cars_table <- html_node(html, ".wikitable")
library(rvest)
cars_url <- "https://en.wikipedia.org/wiki/Comma-separated_values"
html <- read_html(cars_url)
cars_table <- html_node(html, ".wikitable")
cars_table
source("~/.active-rstudio-document", echo=TRUE)
library(rvest)
cars_url <- "https://en.wikipedia.org/wiki/Comma-separated_values"
html <- read_html(cars_url)
cars_table <- html_node(html, ".wikitable")
table <-html_table(cars_table)
print(table)
library(rvest)
cars_url <- "https://en.wikipedia.org/wiki/Comma-separated_values"
html <- read_html(cars_url)
cars_table <- html_node(html, ".wikitable")
table <-html_table(cars_table)
write.csv(table)
library(rvest)
cars_url <- "https://en.wikipedia.org/wiki/Comma-separated_values"
html <- read_html(cars_url)
cars_table <- html_node(html, ".wikitable")
table <-html_table(cars_table)
write.csv(table,"D:\Juanma\Juanma\Universidad\Programacion\st2195_assignment_2\r_csv\\CSV_file.csv",row.names =FALSE)
write.csv(table,"D:/Juanma/Juanma/Universidad/Programacion/st2195_assignment_2/r_csv//CSV_file.csv",row.names =FALSE)
library(DBI)
conn <- dbConnect(RSQLite::SQLite(), "airline.db")
Planes <- read.csv("plane-data.csv")
setwd("D:/Juanma/Juanma/Universidad/Programacion/st2195_assignment_3/r_sql")
library(DBI)
conn <- dbConnect(RSQLite::SQLite(), "airline.db")
Planes <- read.csv("plane-data.csv")
for (i in c(2000:2005)) {
<-read.csv()
}
library(DBI)
conn <- dbConnect(RSQLite::SQLite(), "airline.db")
Planes <- read.csv("plane-data.csv")
Carriers <- read.csv("carriers.csv")
Airports <- read.csv("airports.csv")
for (i in c(2000:2005)) {
<-read.csv()
}
library(DBI)
conn <- dbConnect(RSQLite::SQLite(), "airline.db")
Planes <- read.csv("plane-data.csv")
Carriers <- read.csv("carriers.csv")
Airports <- read.csv("airports.csv")
for (i in c(2000:2005)) {
<-read.csv()
dbWriteTable(conn,"Ontime")
}
library(DBI)
conn <- dbConnect(RSQLite::SQLite(), "airline.db")
Planes <- read.csv("plane-data.csv")
Carriers <- read.csv("carriers.csv")
Airports <- read.csv("airports.csv")
for (i in c(2000:2005)) {
<-read.csv()
dbWriteTable(conn,"Ontime")
library(DBI)
conn <- dbConnect(RSQLite::SQLite(), "airline.db")
Planes <- read.csv("plane-data.csv")
Carriers <- read.csv("carriers.csv")
Airports <- read.csv("airports.csv")
for (i in c(2000:2005)) {
Ontime  <-read.csv()
}
library(DBI)
conn <- dbConnect(RSQLite::SQLite(), "airline.db")
Planes <- read.csv("plane-data.csv")
Carriers <- read.csv("carriers.csv")
Airports <- read.csv("airports.csv")
for (i in c(2000:2005)) {
Ontime  <-read.csv(i)
}
}
library(DBI)
conn <- dbConnect(RSQLite::SQLite(), "airline.db")
Planes <- read.csv("plane-data.csv")
Carriers <- read.csv("carriers.csv")
Airports <- read.csv("airports.csv")
Ontime <- list()
for (i in c(2000:2005)) {
Ontime[[i]]  <-read.csv(i)
}
